#!/usr/bin/env python3
"""
compare.py

–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è VTOL-–¥—Ä–æ–Ω–æ–≤ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã —á–µ—Ä–µ–∑ –º–æ–¥–µ–ª—å deepseek-r1:8b.
"""

import os
import json
import argparse
import ollama

DB_PATH = os.path.join(os.path.dirname(__file__), 'app', 'static_files', 'db.json')
DEFAULT_MODEL = 'deepseek-r1:8b'

def load_db(path: str) -> dict:
    with open(path, encoding='utf-8') as f:
        return json.load(f)

def build_prompt(chosen: list[tuple[str, dict]]) -> str:
    """
    –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –≤–∏–¥–∞:
    "Compare VTOL drones by key params: NameA: {...}; NameB: {...}; NameC: {...}"
    """
    parts = []
    for name, specs in chosen:
        # –°–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é —Å–µ—Ä–∏–∞–ª–∏–∑—É–µ–º –∫–æ–º–ø–∞–∫—Ç–Ω–æ, —á—Ç–æ–±—ã deepseek –≤–∏–¥–µ–ª –≤—Å–µ –ø–æ–ª—è
        specs_json = json.dumps(specs, ensure_ascii=False)
        parts.append(f"{name}: {specs_json}")
    return "–°—Ä–∞–≤–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ VTOL-–¥—Ä–æ–Ω—ã –ø–æ –∫–ª—é—á–µ–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º: " + "; ".join(parts)

def compare_models(models: list[str]):
    db = load_db(DB_PATH)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è
    missing = [m for m in models if m not in db]
    if missing:
        print(f"‚ùå –í –±–∞–∑–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –º–æ–¥–µ–ª–∏: {missing}")
        return

    # –°–æ–±–∏—Ä–∞–µ–º –ø–∞—Ä—ã (–∏–º—è, specs)
    chosen = [(m, db[m]) for m in models]

    prompt = build_prompt(chosen)

    try:
        resp = ollama.chat(
            model=DEFAULT_MODEL,
            messages=[
                {'role': 'system', 'content': '–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ VTOL-–¥—Ä–æ–Ω–∞–º. –°—Ä–∞–≤–Ω–∏ –º–æ–¥–µ–ª–∏ –ø–æ –∫–ª—é—á–µ–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.'},
                {'role': 'user',   'content': prompt}
            ]
        )
        report = resp['message']['content']
        print("üëâ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ:\n")
        print(report)

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Ollama-—Å–µ—Ä–≤–µ—Ä—É:")
        print(e)
        print("\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞:")
        print("1) –ß—Ç–æ Ollama-—Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç –Ω–∞ localhost:11434")
        print("2) –ß—Ç–æ –º–æ–¥–µ–ª—å deepseek-r1:8b —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ (ollama list)")
        print("3) –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–π—Ç–µ OLLAMA_BASE_URL")

def main():
    parser = argparse.ArgumentParser(
        description="–°—Ä–∞–≤–Ω–∏—Ç—å VTOL-–¥—Ä–æ–Ω—ã –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π db.json —á–µ—Ä–µ–∑ –º–æ–¥–µ–ª—å deepseek-r1:8b"
    )
    parser.add_argument(
        'models', nargs='+',
        help='–°–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –º–æ–¥–µ–ª–µ–π –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (–º–∏–Ω–∏–º—É–º 2)'
    )
    args = parser.parse_args()

    if len(args.models) < 2:
        parser.error("–ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –º–∏–Ω–∏–º—É–º –¥–≤–µ –º–æ–¥–µ–ª–∏ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è.")

    compare_models(args.models)

if __name__ == "__main__":
    main()
